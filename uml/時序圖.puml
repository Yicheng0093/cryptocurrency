@startuml
concise "User" as User
concise "Website" as Web
concise "API" as Api

' 定義時間刻度（例如，每個單位代表 100 毫秒）
scale 100 as 100 milliseconds

' 初始狀態：時間點 0
@0
User is Idle
Web is Idle
Api is Idle

' 使用者發起請求：時間點 100
@100
User -> Web: Send Request (e.g., "GET /data")
User is Sending Request
Web is Receiving Request

' 網站處理請求：時間點 150
@150
Web is Processing Request
note right: Website parses request and prepares to forward it

' 網站轉發請求給 API：時間點 200
@200
Web -> Api: Forward Request (e.g., "POST /api/data")
Web is Forwarding Request
Api is Receiving Request

' API 開始處理：時間點 250
@250
Api is Processing Request
note right: API validates input and queries database

' API 完成處理並返回結果：時間點 350
@350
Api -> Web: Return Response (e.g., "200 OK, {data}")
Api is Returning Response
Web is Receiving Response

' 網站處理回應：時間點 400
@400
Web is Processing Response
note right: Website formats data for user display

' 網站將結果顯示給使用者：時間點 450
@450
Web -> User: Display Result (e.g., Rendered HTML page)
Web is Displaying Result
User is Viewing Result

' 所有參與者回到空閒狀態：時間點 600
@600
User is Idle
Web is Idle
Api is Idle

' 添加時間區間註釋
@100..200
note across: Network latency and request forwarding
@250..350
note across: API processing time (e.g., database query)

@enduml